import random as rd
# Global list to store cafeteria statistics
cafeteria_info = [
    {"mean": 7, "std_dev": 3},  # C1
    {"mean": 4, "std_dev": 10},  # C2
    {"mean": 10, "std_dev": 6},  # C3
    {"mean": 5, "std_dev": 2}  # C4
]
# The list above is just an idea to store the cafeteria info.

def exploitOnly():
    global cafeteria_info  # Access the global cafeteria_stats

    # Initialize variables to keep track of the best cafeteria and maximum happiness
    best_cafeteria = None
    max_happiness = float('-inf')
    total_happiness = 0  # Initialize total happiness

    # Visit each cafeteria once for the first four days
    for i, stats in enumerate(cafeteria_info, start=1):
        mean = stats["mean"]
        std_dev = stats["std_dev"]

        # Generate happiness values for one day
        happiness_values = rd.normalvariate(mean, std_dev)
        total_happiness += happiness_values  # Add to total happiness

        # Check if this cafeteria provided the best happiness
        if happiness_values > max_happiness:
            best_cafeteria = f"C{i}"
            max_happiness = happiness_values

    # Visit the best cafeteria for the next 196 days
    for d in range(196):
        stats = cafeteria_info[int(best_cafeteria[1]) - 1]
        mean = stats["mean"]
        std_dev = stats["std_dev"]
        happiness_values = rd.normalvariate(mean, std_dev)
        total_happiness += happiness_values  # Add to total happiness
        max_happiness = max(max_happiness, happiness_values)

    # Return the total happiness generated over 200 days
    return total_happiness
