import random as r
cafeteria1mean = 7
cafeteria1deviation = 3
cafeteria2mean = 4
cafeteria2deviation = 10
cafeteria3mean = 10
cafeteria3deviation = 6
cafeteria4mean = 5
cafeteria4deviation = 2
optimumHappiness = max(cafeteria1mean, cafeteria2mean,cafeteria3mean,cafeteria4mean) * 200

def eGreedy(e=10) -> float:
    #Creates the variables for the total happiness and the best stored average.
    totalHappiness = 0
    storebest = 0

    #Makes lists of information for each cafeteria: first is the cafeteria's happiness, second is its
    #mean, third is its deviation, fourth is how many times it's been visited, fifth is the total amount
    #of happiness stored from all its visits.
    cafeteria1info = [0, cafeteria1mean, cafeteria1deviation, 0, 0]
    cafeteria2info = [0, cafeteria2mean, cafeteria2deviation, 0, 0]
    cafeteria3info = [0, cafeteria3mean, cafeteria3deviation, 0, 0]
    cafeteria4info = [0, cafeteria4mean, cafeteria4deviation, 0, 0]

    #Creates an array.
    happinessArray = []

    #Adds the first visits' happiness values to each cafeteria.
    cafeteria1info[0] += r.normalvariate(cafeteria1info[1], cafeteria1info[2])
    cafeteria2info[0] += r.normalvariate(cafeteria2info[1], cafeteria2info[2])
    cafeteria3info[0] += r.normalvariate(cafeteria3info[1], cafeteria3info[2])
    cafeteria4info[0] += r.normalvariate(cafeteria4info[1], cafeteria4info[2])

    #Adds the lists of cafeteria information to the array.
    happinessArray.append(cafeteria1info)
    happinessArray.append(cafeteria2info)
    happinessArray.append(cafeteria3info)
    happinessArray.append(cafeteria4info)

    #Calculates the likelihood of the algorithm picking the best cafeteria to visit or a random one.
    e = e/100
    ran = r.random()
    days = 0

    #Cycles through 196 times (plus the first four visits makes 200 total).
    while days < 196:

        #Sorts the list from least happiness to most, selecting the cafeteria with the most as the best.
        happinessArray.sort()
        bestinfo = happinessArray[3]

        #In the 10% chance (assuming e = 10), a random cafeteria is selected out of the four options.
        if ran < e:
            i = r.randint(1,4)
            if i == 1:

                #Adds one to the count of how many times the cafeteria's been visited.
                cafeteria1info[3] += 1

                #Adds a visit's happiness to the total happiness of the cafeteria.
                cafeteria1info[4] += r.normalvariate(cafeteria1info[1], cafeteria1info[2])

                #The happiness of the cafeteria is then calculated as the total happiness of the cafeteria
                # divided by the number of visits, thus giving the average of all the visits.
                cafeteria1info[0] = cafeteria1info[4] / cafeteria1info[3]

                #This value is then added to the total.
                totalHappiness += cafeteria1info[0]

            #The same happens for each value of i.
            elif i == 2:
                cafeteria2info[3] += 1
                cafeteria2info[4] += r.normalvariate(cafeteria2info[1], cafeteria2info[2])
                cafeteria2info[0] = cafeteria2info[4] / cafeteria2info[3]
                totalHappiness += cafeteria2info[0]
            elif i == 3:
                cafeteria3info[3] += 1
                cafeteria3info[4] += r.normalvariate(cafeteria3info[1], cafeteria3info[2])
                cafeteria3info[0] = cafeteria3info[4] / cafeteria3info[3]
                totalHappiness += cafeteria3info[0]
            elif i == 4:
                cafeteria4info[3] += 1
                cafeteria4info[4] += r.normalvariate(cafeteria4info[1], cafeteria4info[2])
                cafeteria4info[0] = cafeteria4info[4] / cafeteria4info[3]
                totalHappiness += cafeteria4info[0]

            #Continues the loop.
            days += 1

        #In the other 90 of the time (assuming e = 10), the best happiness is added in an identical process
        #to the first one.
        else:
            bestinfo[3] += 1
            storebest += r.normalvariate(bestinfo[1], bestinfo[2])
            bestinfo[0] = storebest / bestinfo[3]
            totalHappiness += bestinfo[0]

            #Continues the loop.
            days += 1

    #Returns the total happiness as a float with two significant figures.
    return float("%.*f"%(2, totalHappiness))

# 
# i = 0
# v = 0
# while i < 10000:
#     v += eGreedy()
#     i += 1
# result = v / i
# print(result)
